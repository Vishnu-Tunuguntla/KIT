import psycopg2


conn = psycopg2.connect(
    dbname="postgres",
    user="KIT_ADMIN",
    password="hvz0rfb4BGQ_uqg3wfg",
    host="kit-db.c9gssgcyk1lb.us-east-1.rds.amazonaws.com",
    port="5432"
)
cur = conn.cursor()

# SQL for creating tables
create_videos_table = """
CREATE TABLE IF NOT EXISTS Videos (
    VideoID SERIAL PRIMARY KEY,
    DeviceID VARCHAR(255),
    Timestamp TIMESTAMP NOT NULL,
    Path TEXT NOT NULL,
    MotionDetected BOOLEAN,
    Processed BOOLEAN DEFAULT FALSE
);
"""

create_frames_table = """
CREATE TABLE IF NOT EXISTS Frames (
    FrameID SERIAL PRIMARY KEY,
    VideoID INT,
    Timestamp TIMESTAMP NOT NULL,
    Path TEXT NOT NULL,
    Processed BOOLEAN DEFAULT FALSE,
    FOREIGN KEY (VideoID) REFERENCES Videos (VideoID)
);
"""

create_analysis_results_table = """
CREATE TABLE IF NOT EXISTS AnalysisResults (
    ResultID SERIAL PRIMARY KEY,
    FrameID INT,
    Algorithm VARCHAR(255),
    Result JSONB,
    FOREIGN KEY (FrameID) REFERENCES Frames (FrameID)
);
"""

create_object_details_table = """
CREATE TABLE IF NOT EXISTS ObjectDetails (
    ObjectID SERIAL PRIMARY KEY,
    ResultID INT,
    Name VARCHAR(255),
    Details JSONB,
    FOREIGN KEY (ResultID) REFERENCES AnalysisResults (ResultID)
);
"""

cur = conn.cursor()

create_nutritional_facts_table = """
CREATE TABLE IF NOT EXISTS NutritionalFacts (
    FactID SERIAL PRIMARY KEY,
    ObjectID INT,
    Facts JSONB,
    FOREIGN KEY (ObjectID) REFERENCES ObjectDetails (ObjectID)
);
"""

# Execute the SQL statements
cur.execute(create_videos_table)
cur.execute(create_frames_table)
cur.execute(create_analysis_results_table)
cur.execute(create_object_details_table)
cur.execute(create_nutritional_facts_table)

# Commit the transactions
conn.commit()

# Close the cursor and connection
cur.close()
conn.close()

print("Tables created successfully.")